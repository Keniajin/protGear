
#'
#' @title Merge array data with the sample ID
#' @description  merge several slide datasets
#'
#' @param dfs A character vector with the names of the
#' @param filenames A vector or list of files names
#' @param data_files A list with of data files
#' @param totsamples The total number of samples per slide. defined in genepix vars
#' @param blockspersample the number of samples in a block
#' @param sampleID_path  location of the sample id files defined in the genepix vars
#' @param bg A logical character indicating whether the background data is being merged or not
#' @export
#' @import purrr
#' @return  A data frame of slide data merged together, for eith bg data or bg corrected data
merge_datasets <- function(dfs,filenames , data_files ,totsamples, blockspersample ,
                           sampleID_path,bg=FALSE){
  if(bg==TRUE){
    data1_transp <- purrr::map(.x=dfs, .f=transp_bg,
                               totsamples=totsamples,blockspersample=blockspersample,
                               sampleID_path=sampleID_path,data_files=data_files )
  }else{
    data1_transp <- purrr::map(.x=dfs, .f=transp,
                               totsamples=totsamples,blockspersample=blockspersample,
                               sampleID_path=sampleID_path,data_files=data_files )
  }


  data1_transp <- set_names(data1_transp, purrr::map(filenames, name_of_files))
  return(data1_transp)
}
#'         \\\_End_function\\\         #
#'
#'

#' Plot mean vs SD of normalised data
#'
#' @param exprs_normalised A normalised object of class data frame or matrix
#'
#' @return A ggplot of mean vs standard deviation
#' @export
#' @description A genereic function to plot \code{mean} vs \code{sd} after normalisation.
#' @import ggplot2
#' @examples
#' matrix_antigen <- readr::read_csv(system.file("extdata", "matrix_antigen.csv", package="protGear"))
#' normlise_vsn <- matrix_normalise(as.matrix(matrix_antigen),
#' method = "vsn",
#' return_plot = FALSE
#' )
#' plot_mean_sd(normlise_vsn)
plot_mean_sd <- function(exprs_normalised){

  ggplot(exprs_normalised ,  aes(x=rankMean, y=stdev)) +
    geom_jitter( color="red") + theme_classic() +
    ggtitle(paste0(toupper(unique(exprs_normalised$method)))) +
    xlab("Mean rank normalised") +
    ylab("SD normalised") +
    theme_light()
}





